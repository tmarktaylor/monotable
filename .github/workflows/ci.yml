name: CI

on:
  push:
  pull_request:
    branches: [develop]

jobs:
  versions:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          python-version: ["pypy-3.7", "3.7", "3.8", "3.9", "3.10"]
      steps:
        - uses: actions/checkout@v2
        - name: Setup Python
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
        - name: Install
          run: |
            python -m pip install --upgrade pip
            pip install --no-deps "."
            pip install pytest
            pip freeze
        - name: Test suite
          run: |
            pytest -v tests

  os:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Windows Venv
      run: |
        python -m venv ${{ github.workspace }}\env
        ${{ github.workspace }}\env\Scripts\Activate.ps1
        python -m pip --version
      if: startswith(runner.os, 'Windows')
    - name: Linux/macOS Venv
      run: |
        python -m venv ${{ github.workspace }}/env
        source ${{ github.workspace }}/env/bin/activate
        python -m pip --version
      if: startswith(runner.os, 'Linux') || startswith(runner.os, 'macOS')
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --no-deps "."
        pip install pytest
    - name: Tests
      run: |
        pytest -v tests

  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      id: setuppython
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install coverage
        pip freeze
    - name: Tests
      run: |
        coverage run --branch --source=src -m pytest -v tests
        coverage report --show-missing
        coverage xml
    # todo- Upload coverage to Codecov

  inspect:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black
        pip install flake8
        pip install pep8-naming
        pip install mypy
        pip install typing
        pip install check-manifest
        pip install build
        pip install twine
        pip install trove-classifiers
        pip freeze
    # todo- mypy, typing
    #- name: Formatting
      # todo- Show reformatting changes.
      # Make the changes.
      # Subsequent steps run with the modified files.
      #run: |
      #  black --diff --color "."
      #  black "."
      # continue-on-error: true
    - name: Code Style
      run: |
        flake8 --exit-zero --max-complexity=10
    - name: Deployable
      run: |
        # python tests/check_classifiers.py
        check-manifest -v
        python -m build
        twine check dist/*

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        # This should be the same as in .readthedocs.yml
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install sphinx
        sphinx_rtd_theme
        pip freeze
    - name: Sphinx build
      run: |
        mkdir docbuild
        sphinx-build -b html -d docbuild/doctrees . docbuild/html
    - name: Upload docs
      uses: actions/upload-artifact@v2
      with:
        name: docs
        path: docbuild/html
        retention-days: 5
